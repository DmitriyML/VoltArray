
VoltArray.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000218  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  000002f8  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  000002f8  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000001c  00000000  00000000  00000327  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000348  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003abf  00000000  00000000  00000388  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000322d  00000000  00000000  00003e47  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000056d  00000000  00000000  00007074  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000075e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00002248  00000000  00000000  00007618  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000048  00000000  00000000  00009860  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000098a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000276  00000276  000002ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000098b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.main    0000003c  00000218  00000218  0000028c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__dummy_fini 00000002  0000027e  0000027e  000002f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.__dummy_funcs_on_exit 00000002  00000280  00000280  000002f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__dummy_simulator_exit 00000002  00000282  00000282  000002f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.exit    00000016  00000254  00000254  000002c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text._Exit   00000004  0000027a  0000027a  000002ee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.avrlibc 0000000c  0000026a  0000026a  000002de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
   8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
   c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  10:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  14:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  18:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  1c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  20:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  24:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  28:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  2c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  30:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  34:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  38:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  3c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  40:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  44:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  48:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  4c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  50:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  54:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  58:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  5c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  60:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  64:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  68:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  6c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  70:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  74:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  78:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  7c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  80:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  84:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  88:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  8c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  90:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  94:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  98:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  9c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  a0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  a4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  a8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  ac:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  b0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  b4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  b8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  bc:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  c0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  c4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  c8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  cc:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  d0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  d4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  d8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  dc:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  e0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  e4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  e8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  ec:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  f0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  f4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  f8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
  fc:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 100:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 104:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 108:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 10c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 110:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 114:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 118:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 11c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 120:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 124:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 128:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 12c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 130:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 134:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 138:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 13c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 140:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 144:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 148:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 14c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 150:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 154:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 158:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 15c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 160:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 164:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 168:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 16c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 170:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 174:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 178:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 17c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 180:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 184:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 188:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 18c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 190:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 194:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 198:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 19c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1a0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1a4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1a8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1ac:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1b0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1b4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1b8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1bc:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1c0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1c4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1c8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1cc:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1d0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1d4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1d8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1dc:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1e0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1e4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1e8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1ec:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1f0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1f4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 1f8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e5       	ldi	r29, 0x5F	; 95
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	0e 94 0c 01 	call	0x218	; 0x218 <_etext>
 210:	0c 94 2a 01 	jmp	0x254	; 0x254 <exit>

00000214 <_exit>:
 214:	f8 94       	cli

00000216 <__stop_program>:
 216:	ff cf       	rjmp	.-2      	; 0x216 <__stop_program>

Disassembly of section .text:

00000276 <__bad_interrupt>:
 276:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

00000218 <main>:

#include <xc.h>
#include <avr/cpufunc.h>

int main(void)
{
 218:	cf 93       	push	r28
 21a:	df 93       	push	r29
 21c:	0f 92       	push	r0
 21e:	cd b7       	in	r28, 0x3d	; 61
 220:	de b7       	in	r29, 0x3e	; 62
	volatile uint8_t flag;

	OSC.XOSCCTRL =	  OSC_FRQRANGE_12TO16_gc
 222:	e0 e5       	ldi	r30, 0x50	; 80
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	87 ec       	ldi	r24, 0xC7	; 199
 228:	82 83       	std	Z+2, r24	; 0x02
					| 0 << OSC_X32KLPM_bp
					| 0 << OSC_XOSCPWR_bp
					| OSC_XOSCSEL_XTAL_1KCLK_gc;
					
	OSC.PLLCTRL =	  OSC_PLLSRC_XOSC_gc
 22a:	83 ec       	ldi	r24, 0xC3	; 195
 22c:	85 83       	std	Z+5, r24	; 0x05
					| OSC_PLLFAC1_bm
					| OSC_PLLFAC0_bm;
					
	OSC.CTRL =	  0 << OSC_RC2MEN_bp
 22e:	88 e1       	ldi	r24, 0x18	; 24
 230:	80 83       	st	Z, r24
				| 0 << OSC_RC32KEN_bp
				| 1 << OSC_XOSCEN_bp
				| 1 << OSC_PLLEN_bp;

	do{
		flag = OSC.CTRL & OSC_XOSCRDY_bm ;
 232:	80 91 50 00 	lds	r24, 0x0050	; 0x800050 <__TEXT_REGION_LENGTH__+0x7be050>
 236:	88 70       	andi	r24, 0x08	; 8
 238:	89 83       	std	Y+1, r24	; 0x01
	}
	while(flag == 0x00);
 23a:	89 81       	ldd	r24, Y+1	; 0x01
 23c:	88 23       	and	r24, r24
 23e:	c9 f3       	breq	.-14     	; 0x232 <main+0x1a>
					
	ccp_write_io(&CLK.CTRL,CLK_SCLKSEL_XOSC_gc);
 240:	63 e0       	ldi	r22, 0x03	; 3
 242:	80 e4       	ldi	r24, 0x40	; 64
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	0e 94 35 01 	call	0x26a	; 0x26a <ccp_write_io>
					
	flag = OSC.CTRL & OSC_XOSCRDY_bm ;					
 24a:	80 91 50 00 	lds	r24, 0x0050	; 0x800050 <__TEXT_REGION_LENGTH__+0x7be050>
 24e:	88 70       	andi	r24, 0x08	; 8
 250:	89 83       	std	Y+1, r24	; 0x01
 252:	ff cf       	rjmp	.-2      	; 0x252 <main+0x3a>

Disassembly of section .text.__dummy_fini:

0000027e <_fini>:
 27e:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000280 <__funcs_on_exit>:
 280:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000282 <__simulator_exit>:
 282:	08 95       	ret

Disassembly of section .text.exit:

00000254 <exit>:
 254:	ec 01       	movw	r28, r24
 256:	0e 94 40 01 	call	0x280	; 0x280 <__funcs_on_exit>
 25a:	0e 94 3f 01 	call	0x27e	; 0x27e <_fini>
 25e:	ce 01       	movw	r24, r28
 260:	0e 94 41 01 	call	0x282	; 0x282 <__simulator_exit>
 264:	ce 01       	movw	r24, r28
 266:	0e 94 3d 01 	call	0x27a	; 0x27a <_Exit>

Disassembly of section .text._Exit:

0000027a <_Exit>:
 27a:	0e 94 0a 01 	call	0x214	; 0x214 <_exit>

Disassembly of section .text.avrlibc:

0000026a <ccp_write_io>:
 26a:	dc 01       	movw	r26, r24
 26c:	28 ed       	ldi	r18, 0xD8	; 216
 26e:	20 93 34 00 	sts	0x0034, r18	; 0x800034 <__TEXT_REGION_LENGTH__+0x7be034>
 272:	6c 93       	st	X, r22
 274:	08 95       	ret
